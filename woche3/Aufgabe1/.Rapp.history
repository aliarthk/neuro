barplot(as.matrix(matrix),ylim=c(0,2),xlim=1:11,main="Motiv-Logo",xlab="Position",ylab="Entropie",col=c("paleturquoise","pink","pink4","seashell2"),legend = c("A","C","G","T"),args.legend = list(x="top"))
barplot(as.matrix(matrix),ylim=c(0,2),xlim=c(1,11),main="Motiv-Logo",xlab="Position",ylab="Entropie",col=c("paleturquoise","pink","pink4","seashell2"),legend = c("A","C","G","T"),args.legend = list(x="top"))
c <- c(0,-60,0,60)
plot(c)
plot(c,type='l')
c <- c(0,0,-60,0,60,0,0)
plot(c,type='l')
plot(c,type='l',xlab='t',ylab =expression(mu))
plot(c,type='l',xlab='t',ylab =expression(mu)V)
plot(c,type='l',xlab='t',ylab ='expression(mu)V')
plot(c,type='l',xlab='t',ylab =expression(muV)')
plot(c,type='l',xlab='t',ylab =expression(muV))
plot(c,type='l',xlab='t',ylab =expression(mu,V))
plot(c,type='l',xlab='t',ylab =expression(paste(", mu, " )V")))
plot(c,type='l',xlab='t',ylab =expression(paste"(", mu, " )V")))
plot(c,type='l',xlab='t',ylab =expression(paste"(", mu, " )V"))
plot(c,type='l',xlab='t',ylab = expression(paste(mu, "V")))
N <- range(10000000,100000000,10000000)
N
l <- range(1,10,1)
l
l <- range(1,10)
l
l <- (1:10)
l
l <- (1:10,3)
l <- (1:10:3)
l <- (1:3:10)
l <- range(c(1,10,2))
l
l <- seq(1,10,2)
l
N <- seq(10000000,100000000,10000000)
N
plot(N*exp(-(1-theta)*l*(N/hefe)),N)
theta <- 0.2#
l <- 50#
hefe <- 2*(10^7)#
human <- 3.27*(10^9)#
N <- seq(10000000,100000000,10000000)#
#
plot(N*exp(-(1-theta)*l*(N/hefe)),N)
plot(N*exp(-(1-theta)*l*(N/hefe)),N,type='l')
plot(N*exp(-(1-theta)*l*(N/hefe)),type='l')
plot(N*exp(-(1-theta)*l*(N/hefe)),N,type='l')
plot(N,N*exp(-(1-theta)*l*(N/hefe)),type='l')
N <- seq(20000000,100000000,10000000)
plot(N,N*exp(-(1-theta)*l*(N/hefe)),type='l')
N <- seq(10000000,100000000,10000000)
plot(N,log(N*exp(-(1-theta)*l*(N/hefe))),type='l')
N <- seq(10000000,100000000,10000000)
plot(N,log(N*exp(-(1-theta)*l*(N/hefe))),type='l')
plot(N,log(N*exp(-(1-theta)*l*(N/hefe))),type='l',ylab=log(E))
plot(N,log(N*exp(-(1-theta)*l*(N/hefe))),type='l',ylab='log(E)')
N <- seq(100,1000,100)
)*l*(N/hefe))),type='l',ylab='log(E)')
plot(N,log(N*exp(-(1-theta)*l*(N/hefe))),type='l',ylab='log(E)')
plot(N,(N*exp(-(1-theta)*l*(N/hefe))),type='l',ylab='log(E)')
N <- seq(100,10000,100)
plot(N,(N*exp(-(1-theta)*l*(N/hefe))),type='l',ylab='log(E)')
N <- seq(100,1000000,100)
plot(N,(N*exp(-(1-theta)*l*(N/hefe))),type='l',ylab='log(E)')
plot(N,(N*exp(-(1-theta)*l*(N/hefe))),type='l',ylab='Erwartungswert E')
plot(N,(N*exp(-(1-theta)*l*(N/hefe))),type='l',ylab='Erwartungswert E',main='Hefegenom')
plot(N,(N*exp(-(1-theta)*l*(N/human))),type='l',ylab='Erwartungswert E',main='Hefegenom')
N <- seq(100,10000000,100)
plot(N,(N*exp(-(1-theta)*l*(N/human))),type='l',ylab='Erwartungswert E',main='Hefegenom')
N <- seq(100,100000000,100)
plot(N,(N*exp(-(1-theta)*l*(N/human))),type='l',ylab='Erwartungswert E',main='Hefegenom')
N <- seq(100,1000000000,100)
plot(N,(N*exp(-(1-theta)*l*(N/human))),type='l',ylab='Erwartungswert E',main='Hefegenom')
N <- seq(100,500000000,100)
plot(N,(N*exp(-(1-theta)*l*(N/human))),type='l',ylab='Erwartungswert E',main='Hefegenom')
N <- seq(100,200000000,100)
plot(N,(N*exp(-(1-theta)*l*(N/human))),type='l',ylab='Erwartungswert E',main='Hefegenom')
plot(N,(N*exp(-(1-theta)*l*(N/human))),type='l',ylab='Erwartungswert E',main='Humangenom')
N1 <- seq(100,200000000,10000)
theta <- 0.2#
l <- 50#
hefe <- 2*(10^7)#
human <- 3.27*(10^9)#
N1 <- seq(100,200000000,100)#
N1 <- seq(100,200000000,10000)
N2 <- seq(100,200000000,10000)
plot(N2,(N2*exp(-(1-theta)*l*(N2/human))),type='l',ylab='Erwartungswert E',main='Humangenom')
N1 <- seq(100,10000,100)
plot(N1,(N1*exp(-(1-theta)*l*(N1/hefe))),type='l',ylab='Erwartungswert E',main='Hefegenom')
N1 <- seq(100,100000,100)
plot(N1,(N1*exp(-(1-theta)*l*(N1/hefe))),type='l',ylab='Erwartungswert E',main='Hefegenom')
N1 <- seq(100,1000000,100)
plot(N1,(N1*exp(-(1-theta)*l*(N1/hefe))),type='l',ylab='Erwartungswert E',main='Hefegenom')
rand1 <- rnorm(1000,10,2)
hist(rand1)
hist(rand1, xlab = "Normalverteilung 1")
rand1 <- rnorm(1000,10,2)
hist(rand1, xlab = "normal distribution 1")
probabilities <- dnorm(rand1,10,2)
probabilities
rand1
hist(pvalues)
pvalues <- dnorm(rand1,10,2)
hist(pvalues)
pvalues
hist(pvalues)
hist(pvalues,15)
ecdf(pvalues)
plot(ecdf(pvalues))
plot(ecdf(pvalues), titel = "Empirische Verteilungsfunktion der pvalues")
plot(ecdf(pvalues), main = "Empirische Verteilungsfunktion der pvalues")
plot(ecdf(pvalues), main = "Empirische Verteilungsfunktion der pvalues", xlab = "pavalues")
plot(ecdf(pvalues), main = "Empirische Verteilungsfunktion der pvalues", xlab = "pvalues")
rand2 <- rnorm(1000,15,1)
all <- append(rand1,rand2)
hist(all, xlab = "zusammengesetzte Verteilungsdaten")
all
hist(all, xlab = "zusammengesetzte Verteilungsdaten", xlim = c(0,20))
min(all)
max(all)
hist(all, xlab = "zusammengesetzte Verteilungsdaten", xlim = c(2,18))
hist(all, xlab = "zusammengesetzte Verteilungsdaten", xlim = c(2,18), )
hist(all, xlab = "zusammengesetzte Verteilungsdaten", xlim = c(2,18))
hist(all, xlab = "zusammengesetzte Verteilungsdaten", xlim = c(0,20))
hist(all, xlab = "zusammengesetzte Verteilungsdaten", xlim = c(0,20), 15)
hist(all, xlab = "zusammengesetzte Verteilungsdaten", xlim = c(0,20))
hist(all, xlab = "zusammengesetzte Verteilungsdaten", xlim = c(0,20), 15)
hist(all, xlab = "zusammengesetzte Verteilungsdaten", xlim = c(0,20), 20)
hist(all, xlab = "zusammengesetzte Verteilungsdaten", xlim = c(0,20), 30)
hist(all, xlab = "zusammengesetzte Verteilungsdaten", xlim = c(0,20), 20)
hist(all, xlab = "zusammengesetzte Verteilungsdaten", xlim = c(0,20), 25)
hist(all, xlab = "zusammengesetzte Verteilungsdaten", xlim = c(0,20))
pvalues_all <- dnorm(all,10,2)
hist(rand1, xlab = "normal distribution 1")
hist(rand1, xlab = "normal distribution 1",15)
hist(rand1, xlab = "normal distribution 1",20)
pvalues_all <- dnorm(all,10,2)
hist(pvalues_all)
hist(pvalues_all,15)
hist(pvalues_all,15,xlim = c(0,20))
hist(pvalues_all,15,xlim = c(0,1))
hist(pvalues_all,15,xlim = c(0,0.2))
hist(pvalues_all,20)
hist(pvalues_all,30)
hist(pvalues_all)
hist(pvalues_all,30)
plot(ecdf(pvalues_all), main = "Empirische Verteilungsfunktion der zusammengesetzten pvalues", xlab = "pvalues_all")
rand2 <- rnorm(100,15,1)
all <- append(rand1,rand2)
hist(all, xlab = "zusammengesetzte Verteilungsdaten", xlim = c(0,20))
hist(all, xlab = "zusammengesetzte Verteilungsdaten", xlim = c(0,20), 25)
pvalues_all <- dnorm(all,10,2)
hist(pvalues_all)
hist(pvalues_all,30)
plot(ecdf(pvalues_all), main = "Empirische Verteilungsfunktion der zusammengesetzten pvalues", xlab = "pvalues_all")
lines(ecdf(pvalues),col="red")
col=c("red")
col=c("red"))
plot(ecdf(pvalues_all), main = "Empirische Verteilungsfunktion der zusammengesetzten pvalues", xlab = "pvalues_all")
lines(ecdf(pvalues),col="red")
col=c("red"))
lines(ecdf(pvalues),col="red")
col=c("red"))
legend(1,0,legend=c("ecdf aus Teilaufgabe 5"),
legend("topleft",legend=c("ecdf aus Teilaufgabe 5"),
plot(ecdf(pvalues_all), main = "Empirische Verteilungsfunktion der zusammengesetzten pvalues", xlab = "pvalues_all")
lines(ecdf(pvalues),col="red")
legend("topleft",legend=c("ecdf aus Teilaufgabe 5"),
plot(ecdf(pvalues_all), main = "Empirische Verteilungsfunktion der zusammengesetzten pvalues", xlab = "pvalues_all")
lines(ecdf(pvalues),col="red")
col=c("red"),lty=1)
plot(ecdf(pvalues_all), main = "Empirische Verteilungsfunktion der zusammengesetzten pvalues", xlab = "pvalues_all")#
lines(ecdf(pvalues),col="red")#
legend("topleft",legend=c("ecdf aus Teilaufgabe 5"),#
       col=c("red"),lty=1)
legend("left",legend=c("ecdf aus Teilaufgabe 5"),
plot(ecdf(pvalues_all), main = "Empirische Verteilungsfunktion der zusammengesetzten pvalues", xlab = "pvalues_all")#
lines(ecdf(pvalues),col="red")#
legend("left",legend=c("ecdf aus Teilaufgabe 5"),#
       col=c("red"),lty=1)
hist(pvalues_all,30)
plot(ecdf(pvalues_all), main = "Empirische Verteilungsfunktion der zusammengesetzten pvalues", xlab = "pvalues_all")
lines(ecdf(pvalues),col="red")
col=c("red"),lty=1)
legend("left",legend=c("ecdf aus Teilaufgabe 5"),
col=c("red"),lty=1))
col=c("red"),lty=1)
legend("topleft, inset=0.5",legend=c("ecdf aus Teilaufgabe 5"),
plot(ecdf(pvalues_all), main = "Empirische Verteilungsfunktion der zusammengesetzten pvalues", xlab = "pvalues_all")
lines(ecdf(pvalues),col="red")
col=c("red"),lty=1)
legend("topleft inset=0.5",legend=c("ecdf aus Teilaufgabe 5"),
col=c("red"),lty=1))
plot(ecdf(pvalues_all), main = "Empirische Verteilungsfunktion der zusammengesetzten pvalues", xlab = "pvalues_all")
lines(ecdf(pvalues),col="red")
col=c("red"),lty=1))
col=c("red"), lty=1, cex=0.8)
legend("topleft", legend=c("ecdf aus Teilaufgabe 5"),
col=c("red"), lty=1, cex=0.8)
legend("topleft, inset = 0.5", legend=c("ecdf aus Teilaufgabe 5"),
legend("topleft", inset = 0.5, legend=c("ecdf aus Teilaufgabe 5"),
plot(ecdf(pvalues_all), main = "Empirische Verteilungsfunktion der zusammengesetzten pvalues", xlab = "pvalues_all")
lines(ecdf(pvalues),col="red")
col=c("red"), lty=1, cex=0.8)
plot(ecdf(pvalues_all), main = "Empirische Verteilungsfunktion der zusammengesetzten pvalues", xlab = "pvalues_all")
lines(ecdf(pvalues),col="red")
col=c("red"), lty=1, cex=0.8)
legend("topleft", legend=c("ecdf aus Teilaufgabe 5"), col=c("red"), lty=1, cex=0.8)
plot(ecdf(pvalues_all), main = "Empirische Verteilungsfunktion der zusammengesetzten pvalues", xlab = "pvalues_all")
lines(ecdf(pvalues),col="red")
legend("topleft",inset=0.5,legend=c("ecdf aus Teilaufgabe 5"), col=c("red"), lty=1, cex=0.8)
plot(ecdf(pvalues_all), main = "Empirische Verteilungsfunktion der zusammengesetzten pvalues", xlab = "pvalues_all")
lines(ecdf(pvalues),col="red")
legend("topleft",inset=0.05,legend=c("ecdf aus Teilaufgabe 5"), col=c("red"), lty=1, cex=0.8)
getwd()
setwd("/Users/marasteiger/Documents/Uni/Neuro/Praktikum/tag3")
setwd("/Users/marasteiger/Documents/Uni/Neuro/Praktikum/tag3/Aufgabe1")
a1 <- read.table(1_2.txt)
a1 <- read.table("1_2.txt")
a1
a1 <- read.table("1_2.txt", header = T)
a1
plot(log(conc_k),eq_k)
a1[1,]
a1[,1]
plot(log(a1[,1]),a1[,2])
plot(log(a1[,1]),a1[,2], xlab = "log(Kalium-Konzentration)",)
plot(log(a1[,1]),a1[,2], xlab = "log(Kalium-Konzentration)", ylab = "")
lines(log(a1[,1]),a1[,3])
lines(log(a1[,1]),a1[,3],type="dots")
lines(log(a1[,1]),a1[,3],type="p")
plot(log(a1[,1]),a1[,2], xlab = "log(Kalium-Konzentration)", ylab = "")
lines(log(a1[,1]),a1[,3],type="p")
plot(log(a1[,1]),a1[,2], xlab = "log(Kalium-Konzentration)", ylab = "" ,col = "blue")
lines(log(a1[,1]),a1[,3],type="p", col = "red")
log(10)
plot(log2(a1[,1]),a1[,2], xlab = "log(Kalium-Konzentration)", ylab = "" ,col = "blue")
lines(log2(a1[,1]),a1[,3],type="p", col = "red")
plot(log(a1[,1]),a1[,2], xlab = "log(Kalium-Konzentration)", ylab = "" ,col = "blue")
lines(log(a1[,1]),a1[,3],type="p", col = "red")
plot(log2(a1[,1]),a1[,2], xlab = "log(Kalium-Konzentration)", ylab = "" ,col = "blue")
lines(log2(a1[,1]),a1[,3],type="p", col = "red")
plot(log(a1[,1]),a1[,2], xlab = "log(Kalium-Konzentration)", ylab = "" ,col = "blue")
lines(log(a1[,1]),a1[,3],type="p", col = "red")
legend("topleft", legend=c("Gleichgewichtspotential Kalium", "Membranpotential"), col = c("blue","red"))
legend("topleft", legend=c("Gleichgewichtspotential Kalium", "Membranpotential"), col = c("blue","red"), lty = "p")
legend("topleft", legend=c("Gleichgewichtspotential Kalium", "Membranpotential"), col = c("blue","red"), lty = 19)
plot(log(a1[,1]),a1[,2], xlab = "log(Kalium-Konzentration)", ylab = "" ,col = "blue")
lines(log(a1[,1]),a1[,3],type="p", col = "red")
legend("topleft", legend=c("Gleichgewichtspotential Kalium", "Membranpotential"), col = c("blue","red"), lty = 19)
legend("topleft", legend=c("Gleichgewichtspotential Kalium", "Membranpotential"), col = c("blue","red"), lty = c("dotted","dotted"))
plot(log(a1[,1]),a1[,2], xlab = "log(Kalium-Konzentration)", ylab = "" ,col = "blue")
lines(log(a1[,1]),a1[,3],type="p", col = "red")
legend("topleft", legend=c("Gleichgewichtspotential Kalium", "Membranpotential"), col = c("blue","red"), lty = c("dotted","dotted"))
legend("topleft", legend=c("Gleichgewichtspotential Kalium", "Membranpotential"), col = c("blue","red"), lty = c("p","p"))
plot(log(a1[,1]),a1[,2], xlab = "log(Kalium-Konzentration)", ylab = "" ,col = "blue")
lines(log(a1[,1]),a1[,3],type="p", col = "red")
legend("topleft", legend=c("Gleichgewichtspotential Kalium", "Membranpotential"), col = c("blue","red"), lty = c("p","p"))
plot(log(a1[,1]),a1[,2], xlab = "log(Kalium-Konzentration)", ylab = "" ,col = "blue")#
lines(log(a1[,1]),a1[,3],type="p", col = "red")#
legend("topleft", legend=c("Gleichgewichtspotential Kalium", "Membranpotential"), col = c("blue","red"), lty = c(1,2))
plot(log(a1[,1]),a1[,2], xlab = "log(Kalium-Konzentration)", ylab = "" ,col = "blue")#
lines(log(a1[,1]),a1[,3],type="p", col = "red")#
legend("topleft", legend=c("Gleichgewichtspotential Kalium", "Membranpotential"), col = c("blue","red"), lty = c(3,4))
plot(log(a1[,1]),a1[,2], xlab = "log(Kalium-Konzentration)", ylab = "" ,col = "blue")#
lines(log(a1[,1]),a1[,3],type="p", col = "red")#
legend("topleft", legend=c("Gleichgewichtspotential Kalium", "Membranpotential"), col = c("blue","red"), lty = c(5,6))
plot(log(a1[,1]),a1[,2], xlab = "log(Kalium-Konzentration)", ylab = "" ,col = "blue")#
lines(log(a1[,1]),a1[,3],type="p", col = "red")#
legend("topleft", legend=c("Gleichgewichtspotential Kalium", "Membranpotential"), col = c("blue","red"), pch = c(1,2))
plot(log(a1[,1]),a1[,2], xlab = "log(Kalium-Konzentration)", ylab = "" ,col = "blue")#
lines(log(a1[,1]),a1[,3],type="p", col = "red")#
legend("topleft", legend=c("Gleichgewichtspotential Kalium", "Membranpotential"), col = c("blue","red"), pch = c(1,1))
plot(log(a1[,1]),a1[,2], xlab = "log(Kalium-Konzentration)", ylab = "mV" ,col = "blue")
lines(log(a1[,1]),a1[,3],type="p", col = "red")
legend("topleft", legend=c("Gleichgewichtspotential Kalium", "Membranpotential"), col = c("blue","red"), pch = c(1,1))
plot(log(a1[,1]),a1[,2], xlab = "log(Kalium-Konzentration in mMol)", ylab = "mV" ,col = "blue")
lines(log(a1[,1]),a1[,3],type="p", col = "red")
legend("topleft", legend=c("Gleichgewichtspotential Kalium", "Membranpotential"), col = c("blue","red"), pch = c(1,1))
